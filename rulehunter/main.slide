Rulehunter
Find Simple Rules in Your Data to Meet Your Goals
15 Feb 2018

Lawrence Woodman
vLife Systems Ltd
lwoodman@vlifesystems.com
http://rulehunter.com


* Rulehunter

Rulehunter analyses historic data

Provides recommendations to achieve your goals, such as improve ROI

Balances compete priorities, such as a company's ROI vs its client's ROI

* An Example to Set the Scene

* A Call Center Working on Behalf of its Client

.html css.html
A call centre's client wants them to sell printer repair contracts

The call centre and the client have competing priorities

*The*client’s*requirements*

- The ROI (Return On Investment) must be at least 15.0
- At least 25% of contacts must result in a repair contract
- They would like the total value of contracts to be as high as possible

*The*call*centre’s*requirements*

- The ROI for the call centre needs to be at least 1.10
- The clients requirements must be met
- Once the client's requirements are met the call centre would like an ROI of 1.30

: The call centre ROI has factored in the cost of the telephone calls, the callers' pay and additional overheads.

* What Can the Call Centre do to Balance These Priorities?

The companies to call are split into segments

*The*call*centre*can*adjust*the*following:*

- Who calls which segment
- Who calls each quarter
- Which quarter in the day each segment is called
- How many callbacks are allowed by each caller
- _How_many_callbacks_are_attempted_for_each_segment_


* Use of Rulehunter

The campaign needs to be called for a while to create a dataset

The requirements of the call centre and its client are given to Rulehunter

The variables that the call centre can adjust are also specified

Rulehunter regularly and automatically processes the most up-to-date dataset


* A Dataset

* How Many Callbacks for Each Segment?

The data set contains 5000 records, each representing a lead

.html how_many_callbacks_segment_dataset.html


.html how_many_callbacks_segment_dataset.html


* How Many Callbacks for Each Segment? - The Best Rule

Rulehunter finds the following rule:

  (in(segment,"a","d","f","g") && callbacks <= 5) ||
  (in(segment,"b","c","e") && callbacks <= 9)

Segments: _a_, _d_, _f_ and _g_ should have a maximum of _5_ callbacks
Segments: _b_, _c_ and _e_ should have a maximum of _9_ callbacks

* How Many Callbacks for Each Segment? - The Result (Aggregators)

The report shows the difference between the use of the rule and without

.html how_many_callbacks_segment_aggregators.html

* How Many Callbacks for Each Segment? - The Result (Goals)

With the rule the report shows that all the goals are met, without none are met

.html how_many_callbacks_segment_goals.html


* How Many Callbacks for Each Segment? - Analysis

All the specified goals are met when the rule is used

The call centre has gone from making a loss of £-11,059 to making a profit of £2,062

.html how_many_callbacks_segment_profit_barchart.html

* Advantages

- Simple
- Transparent and Easily Understood
- Reports accessible through web interface
- Additional machine readable reports generated for more flexibility
- You host the software, so you stay in control of it and your data
- Open source - It is absolutely free for personal or commercial use

: Create reports that are clear and understandable to humans. We want to put humans in control.

: This is even more important with the introduction of the GDPR


* Summary
Rulehunter finds simple rules in your data to meet your goals

*The*User*

- Provide Rulehunter with a dataset
- Specify your objectives and priorities

*Rulehunter*

- Analyses the dataset
- Finds the best rule to meet those requirements
- Produces a report detailing how effective the rule is

* Support

We can provide training and support
